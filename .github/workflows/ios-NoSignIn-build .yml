# Simple iOS Simulator Build - GitHub Actions
# File: .github/workflows/ios-simple-build.yml
# Version: Final Correction

name: Simple iOS Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Xcode
      run: |
        sudo xcode-select -s /Applications/Xcode_15.0.app/Contents/Developer
        xcodebuild -version
    
    - name: Install CocoaPods (if needed)
      run: |
        if [ -f "Podfile" ]; then
          echo "Podfile found. Installing dependencies."
          pod install
        else
          echo "No Podfile found. Skipping pod install."
        fi
    
    # [FINAL CORRECTED VERSION]
    - name: List Project Info and Set Paths
      id: project_info
      run: |
        echo "=== Searching for project/workspace (max depth: 3) ==="
        ls -laR # List all files recursively for debugging

        # Use `find` with `maxdepth` to prevent it from searching inside .xcodeproj bundles.
        # This will find top-level workspaces and projects, which is the correct behavior.
        # We prioritize the workspace, as is standard for CocoaPods.
        WORKSPACE_PATH=$(find . -maxdepth 3 -name "*.xcworkspace" | head -1)
        PROJECT_PATH=$(find . -maxdepth 3 -name "*.xcodeproj" | head -1)

        if [ -n "$WORKSPACE_PATH" ]; then
          echo "✅ Found workspace at: $WORKSPACE_PATH"
          echo "WORKSPACE_FILE=${WORKSPACE_PATH}" >> $GITHUB_ENV
          echo "USE_WORKSPACE=true" >> $GITHUB_ENV
          # Extract the scheme name from the file path.
          SCHEME_NAME=$(basename "$WORKSPACE_PATH" .xcworkspace)
          echo "PROJECT_NAME=${SCHEME_NAME}" >> $GITHUB_ENV

        elif [ -n "$PROJECT_PATH" ]; then
          echo "✅ Found project at: $PROJECT_PATH"
          echo "PROJECT_FILE=${PROJECT_PATH}" >> $GITHUB_ENV
          echo "USE_WORKSPACE=false" >> $GITHUB_ENV
          # Extract the scheme name from the file path.
          SCHEME_NAME=$(basename "$PROJECT_PATH" .xcodeproj)
          echo "PROJECT_NAME=${SCHEME_NAME}" >> $GITHUB_ENV

        else
          echo "❌ Error: Could not find a .xcworkspace or .xcodeproj file within 3 directory levels."
          echo "Please ensure your project file is in the repository and not nested too deeply."
          exit 1
        fi
        
        echo "--- Determined Variables ---"
        echo "PROJECT_NAME: ${SCHEME_NAME}"
        echo "USE_WORKSPACE: $( [ -n "$WORKSPACE_PATH" ] && echo true || echo false )"
        echo "WORKSPACE_FILE: ${WORKSPACE_PATH:-'Not Set'}"
        echo "PROJECT_FILE: ${PROJECT_PATH:-'Not Set'}"
        echo "--------------------------"

    - name: Show Schemes
      run: |
        if [ "$USE_WORKSPACE" == "true" ]; then
          xcodebuild -workspace "$WORKSPACE_FILE" -list
        else
          xcodebuild -project "$PROJECT_FILE" -list
        fi
    
    - name: Build for Simulator
      run: |
        if [ "$USE_WORKSPACE" == "true" ]; then
          BUILD_ARGS="-workspace \"$WORKSPACE_FILE\""
        else
          BUILD_ARGS="-project \"$PROJECT_FILE\""
        fi
        
        # Note: If your scheme name is different from your project/workspace file name,
        # you must set it manually here.
        xcodebuild build \
          $BUILD_ARGS \
          -scheme "$PROJECT_NAME" \
          -configuration Debug \
          -destination 'platform=iOS Simulator,name=iPhone 15' \
          -sdk iphonesimulator \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO

    - name: Create Archive
      run: |
        if [ "$USE_WORKSPACE" == "true" ]; then
          BUILD_ARGS="-workspace \"$WORKSPACE_FILE\""
        else
          BUILD_ARGS="-project \"$PROJECT_FILE\""
        fi
        
        xcodebuild archive \
          $BUILD_ARGS \
          -scheme "$PROJECT_NAME" \
          -archivePath "build/$PROJECT_NAME.xcarchive" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ios-build-artifacts
        path: build/
        retention-days: 7
