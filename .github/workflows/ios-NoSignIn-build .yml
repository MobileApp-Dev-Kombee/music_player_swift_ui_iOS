name: Build iOS Project (Dynamic)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-14

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        lfs: true

    - name: Select latest stable Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: 'latest-stable'

    - name: Verify Xcode Version
      run: xcodebuild -version

    - name: Get Project and Scheme Info
      id: project_info
      run: |
        # Find the .xcodeproj file automatically
        PROJECT_FILE=$(find . -name "*.xcodeproj" -maxdepth 1)
        if [ -z "$PROJECT_FILE" ]; then
          echo "Error: No .xcodeproj file found in the root directory."
          exit 1
        fi
        echo "PROJECT_NAME=${PROJECT_FILE##*/}" >> $GITHUB_OUTPUT

        # Dynamically find the first non-test scheme
        SCHEME=$(xcodebuild -list -project "$PROJECT_FILE" | grep -v -E '(Pods|Tests)' | awk 'NR==1{print $1}' | sed -n 's/^[[:space:]]*//;s/[[:space:]]*$//;p')
        if [ -z "$SCHEME" ]; then
          echo "Error: Could not automatically determine a buildable scheme."
          exit 1
        fi
        echo "SCHEME_NAME=${SCHEME}" >> $GITHUB_OUTPUT

    - name: Get Runner Architecture
      id: runner_arch
      run: echo "ARCH=$(uname -m)" >> $GITHUB_OUTPUT

    - name: Build for iOS Simulator
      run: |
        PROJECT_NAME="${{ steps.project_info.outputs.PROJECT_NAME }}"
        SCHEME_NAME="${{ steps.project_info.outputs.SCHEME_NAME }}"
        ARCH_TYPE="${{ steps.runner_arch.outputs.ARCH }}"
        DERIVED_DATA_PATH="build/DerivedData"

        echo "Found project: $PROJECT_NAME"
        echo "Found scheme: $SCHEME_NAME"
        echo "Runner architecture: $ARCH_TYPE"
        echo "ðŸ”¨ Building for simulator..."

        xcodebuild clean build \
          -project "$PROJECT_NAME" \
          -scheme "$SCHEME_NAME" \
          -destination 'platform=iOS Simulator,OS=latest' \
          -derivedDataPath "$DERIVED_DATA_PATH" \
          -arch "$ARCH_TYPE" \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO

    - name: Create Build Archive
      run: |
        PROJECT_NAME="${{ steps.project_info.outputs.PROJECT_NAME }}"
        SCHEME_NAME="${{ steps.project_info.outputs.SCHEME_NAME }}"
        ARCHIVE_PATH="build/$SCHEME_NAME.xcarchive"

        echo "ðŸ“¦ Archiving scheme '$SCHEME_NAME'..."
        xcodebuild archive \
          -project "$PROJECT_NAME" \
          -scheme "$SCHEME_NAME" \
          -archivePath "$ARCHIVE_PATH" \
          -destination 'generic/platform=iOS' \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          SKIP_INSTALL=NO

    - name: Upload Simulator Build (.app file)
      uses: actions/upload-artifact@v4
      with:
        name: simulator-build-app
        path: build/DerivedData/Build/Products/Debug-iphonesimulator/${{ steps.project_info.outputs.SCHEME_NAME }}.app
        retention-days: 5

    - name: Upload Archive Build (.xcarchive)
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: archive-build
        path: build/${{ steps.project_info.outputs.SCHEME_NAME }}.xcarchive
        retention-days: 5
