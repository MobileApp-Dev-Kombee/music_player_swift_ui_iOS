name: Build iOS Simulator App (Final - Architecture Fix)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-for-simulator:
    runs-on: macos-14

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        lfs: true

    - name: Select latest stable Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: 'latest-stable'

    - name: Get Project and Scheme Info
      id: project_info
      run: |
        PROJECT_FILE=$(find . -name "*.xcodeproj" -maxdepth 1)
        if [ -z "$PROJECT_FILE" ]; then
          echo "Error: No .xcodeproj file found in the root directory."
          exit 1
        fi
        PROJECT_NAME=$(basename "$PROJECT_FILE")
        echo "PROJECT_NAME=${PROJECT_NAME}" >> $GITHUB_OUTPUT

        SCHEME=$(xcodebuild -list -project "$PROJECT_FILE" | awk '/Schemes:/,/Build Configurations:/' | grep -v -E '(Schemes:|Pods|Tests|Build Configurations:)' | head -n 1 | xargs)
        if [ -z "$SCHEME" ]; then
          echo "Error: Could not automatically determine a buildable scheme."
          exit 1
        fi
        echo "SCHEME_NAME=${SCHEME}" >> $GITHUB_OUTPUT

    - name: Build for iOS Simulator (Forcing arm64)
      run: |
        # FINAL FIX: We are now explicitly telling Xcode to build for arm64.
        # This overrides any project settings that might be forcing an Intel (x86_64) build.
        xcodebuild clean build \
          -project "${{ steps.project_info.outputs.PROJECT_NAME }}" \
          -scheme "${{ steps.project_info.outputs.SCHEME_NAME }}" \
          -sdk iphonesimulator \
          -derivedDataPath "build/DerivedData" \
          ARCHS=arm64 \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO

    - name: Compress Simulator App
      run: |
        DERIVED_DATA_PATH="build/DerivedData"
        APP_NAME="${{ steps.project_info.outputs.SCHEME_NAME }}.app"
        APP_PATH="$DERIVED_DATA_PATH/Build/Products/Debug-iphonesimulator/$APP_NAME"
        ZIP_PATH="${{ steps.project_info.outputs.SCHEME_NAME }}.zip"
        
        echo "Compressing $APP_PATH to $ZIP_PATH"
        ditto -c -k --sequesterRsrc --keepParent "$APP_PATH" "$ZIP_PATH"

    - name: Upload Simulator Build (.zip)
      uses: actions/upload-artifact@v4
      with:
        name: simulator-build-app-zip
        path: ${{ steps.project_info.outputs.SCHEME_NAME }}.zip
        retention-days: 5
